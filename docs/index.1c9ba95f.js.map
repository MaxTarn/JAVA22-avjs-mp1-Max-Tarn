{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-766f60a0235e3002.js","src/js/header.js","node_modules/@parcel/runtime-js/lib/runtime-8693c8fa7b0e5b38.js","node_modules/@parcel/runtime-js/lib/runtime-b91b29efe71487ed.js","node_modules/@parcel/runtime-js/lib/runtime-528d7ec38ee1a7fb.js","node_modules/@parcel/runtime-js/lib/runtime-951cb5b4d43e505e.js","node_modules/@parcel/runtime-js/lib/runtime-bdbb9f1dbc0b6ab6.js","src/js/optionCorelation.js","node_modules/@parcel/runtime-js/lib/runtime-735172ea1c0334a2.js","src/js/getUsrNameForm.js","src/js/rulesAndHeaLineDiv.js","src/js/buttonsDiv.js","src/js/displayDiv.js","src/js/firebase.js","src/js/highScore.js","src/js/script.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"7dHQB\\\":\\\"index.1c9ba95f.js\\\",\\\"hTbNP\\\":\\\"rock.97f32060.png\\\",\\\"iXEgO\\\":\\\"paper.fb05d48f.png\\\",\\\"ewQBJ\\\":\\\"scissor.ab3280e6.png\\\",\\\"gzMDq\\\":\\\"lizard.0557df15.png\\\",\\\"fW4qh\\\":\\\"spock.d42741a4.png\\\",\\\"3nNkT\\\":\\\"RockPaperScissorsLizardSpock.8fb2ef83.jpg\\\"}\"));","//export thing(s) will only be used in script.js\r\n\r\nexport const navbarHeader = document.createElement(\"header\")\r\n\r\n\r\n\r\n// ---------- NAVBAR ----------\r\n\r\n\r\n\r\nconst navbarNav = document.createElement(\"nav\")\r\nconst navbarUl = document.createElement(\"ul\")\r\n\r\nconst navbarLiUsrName = document.createElement(\"li\")\r\nnavbarLiUsrName.innerText = \"UserName : \"\r\nnavbarLiUsrName.className = \"navUsrName\"\r\n\r\nconst navbarLiWins = document.createElement(\"li\")\r\nnavbarLiWins.innerText = \"Wins: \"\r\nnavbarLiWins.className = \"navWins\"\r\n\r\nconst navbarLiNavRound = document.createElement(\"li\")\r\nnavbarLiNavRound.innerText = \"Round: \"\r\nnavbarLiNavRound.className = \"navRound\"\r\n\r\n\r\n\r\n//adds list items to the ul, adds the diffret fields for the navbar\r\nnavbarUl.append(navbarLiUsrName)\r\nnavbarUl.append(navbarLiWins)\r\nnavbarUl.append(navbarLiNavRound)\r\n\r\nnavbarNav.append(navbarUl)\r\n\r\n\r\n//entire navbar is in navbarHeader\r\nnavbarHeader.append(navbarNav)\r\n\r\n\r\n// ---------- NAVBAR END ----------\r\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hTbNP\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"iXEgO\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"ewQBJ\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gzMDq\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fW4qh\")).toString();","//relative location of the imgs used\r\nconst arrOfImgLocation = [ \r\n    \"media/rock.png\",  \r\n    \"media/paper.png\",  \r\n    \"media/scissor.png\",  \r\n    \"media/lizard.png\",  \r\n    \"media/spock.png\"  \r\n] \r\nconst arrOfImgUrl = [\r\n    new URL(\"../media/rock.png\", import.meta.url),\r\n    new URL(\"../media/paper.png\", import.meta.url),\r\n    new URL(\"../media/scissor.png\", import.meta.url),\r\n    new URL(\"../media/lizard.png\", import.meta.url),\r\n    new URL(\"../media/spock.png\", import.meta.url)\r\n]\r\n\r\n\r\n    \r\nlet printThisWhenTied = \"\" \r\n\r\n\r\n/* object that contains all the diffret strings that correlate to what usr and computer has chosen \r\n\r\nif usrChosenOption = paper   and   computerChosenOption = rock \r\noptionCorelation[usrChosenOption][computerChosenOption].outcome         will be \"win\" \r\noptionCorelation[usrChosenOption][computerChosenOption].explanation     will be \"Paper covers rock\" \r\n\r\nobjects in optionCorelation is named the same as the diffrent values of the buttons */\r\nexport const optionCorelation = { \r\n    rock:{ \r\n        location: arrOfImgUrl[0], \r\n        rock:{ \r\n            outcome: \"tie\", \r\n            explanation: printThisWhenTied \r\n        }, \r\n        paper: { \r\n            outcome: \"loss\", \r\n            explanation: \"Paper covers rock\" \r\n        }, \r\n        scissor: { \r\n            outcome: \"win\", \r\n            explanation: \"Rock Crushes scissors\" \r\n        }, \r\n        lizard: { \r\n            outcome: \"win\", \r\n            explanation: \"Rock Crushes lizard\" \r\n        }, \r\n        spock: { \r\n            outcome: \"loss\", \r\n            explanation: \"Spock vaporizes rock\" \r\n        } \r\n    }, \r\n    paper:{ \r\n        location: arrOfImgUrl[1], \r\n        rock:{ \r\n            outcome: \"win\", \r\n            explanation: \"Paper covers rock\" \r\n        }, \r\n        paper: { \r\n            outcome: \"tie\", \r\n            explanation: printThisWhenTied \r\n        }, \r\n        scissor: { \r\n            outcome: \"loss\", \r\n            explanation: \"Scissor cuts paper\" \r\n        }, \r\n        lizard: { \r\n            outcome: \"loss\", \r\n            explanation: \"Lizard eats paper\" \r\n        }, \r\n        spock: { \r\n            outcome: \"win\", \r\n            explanation: \"Paper disproves Spock\" \r\n        } \r\n    }, \r\n    scissor:{ \r\n        location:arrOfImgUrl[2], \r\n        rock:{ \r\n            outcome: \"loss\", \r\n            explanation: \"Rock crushes scissors\" \r\n        }, \r\n        paper: { \r\n            outcome: \"win\", \r\n            explanation: \"Scissors cuts paper\" \r\n        }, \r\n        scissor: { \r\n            outcome: \"tie\", \r\n            explanation: printThisWhenTied \r\n        }, \r\n        lizard: { \r\n            outcome: \"win\", \r\n            explanation: \"Scissors decapitates lizard\" \r\n        }, \r\n        spock: { \r\n            outcome: \"loss\", \r\n            explanation: \"Spock smashes scissors\" \r\n        } \r\n    },  \r\n    lizard:{ \r\n        location: arrOfImgUrl[3], \r\n        rock:{ \r\n            outcome: \"loss\", \r\n            explanation: \"Rock crushes lizard\" \r\n        }, \r\n        paper: { \r\n            outcome: \"win\", \r\n            explanation: \"Lizard eats paper\" \r\n        }, \r\n        scissor: { \r\n            outcome: \"loss\", \r\n            explanation: \"Scissors decapitates lizard\" \r\n        }, \r\n        lizard: { \r\n            outcome: \"tie\", \r\n            explanation: printThisWhenTied \r\n        }, \r\n        spock: { \r\n            outcome: \"win\", \r\n            explanation: \"Lizard poisons Spock\" \r\n        } \r\n    }, \r\n    spock:{ \r\n        location: arrOfImgUrl[4], \r\n        rock:{ \r\n            outcome: \"win\", \r\n            explanation: \"Spock vaporizes rock\" \r\n        }, \r\n        paper: { \r\n            outcome: \"loss\", \r\n            explanation: \"Paper disproves Spock\" \r\n        }, \r\n        scissor: { \r\n            outcome: \"win\", \r\n            explanation: \"Spock smashes scissors\" \r\n        }, \r\n        lizard: { \r\n            outcome: \"loss\", \r\n            explanation: \"Lizard poisons Spock\" \r\n        }, \r\n        spock: { \r\n            outcome: \"tie\", \r\n            explanation: printThisWhenTied \r\n        } \r\n    },\r\n    diagramURL : new URL(\"../media/RockPaperScissorsLizardSpock.jpg\", import.meta.url)\r\n} \r\n ","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3nNkT\")).toString();","//export thing(s) will only be used in script.js\r\n\r\nexport const getUsrNameForm = document.createElement(\"form\")\r\n\r\n//---------- GET USR NAME FORM ----------\r\n\r\n\r\n// getUsrNameForm.method = \"get\"\r\n// getUsrNameForm.action = \"?\"\r\ngetUsrNameForm.id = \"getUsrNameForm\"\r\n\r\nconst getUsrNameH2 = document.createElement(\"h2\")\r\ngetUsrNameH2.innerText = \"Enter your Name\"\r\n\r\nconst getUsrNameDiv = document.createElement(\"div\")\r\ngetUsrNameDiv.className = \"input-parent\"\r\n\r\nexport const getUsrNameInput = document.createElement(\"input\")\r\ngetUsrNameInput.type = \"text\"\r\ngetUsrNameInput.name = \"usrName\"\r\ngetUsrNameInput.id = \"name\"\r\n\r\nexport const getUsrNameButton = document.createElement(\"button\")\r\n\r\n\r\n\r\n// getUsrNameButton.type = \"submit\"\r\ngetUsrNameButton.className = \"usrNameSubmit\"\r\ngetUsrNameButton.innerText = \"Submit\"\r\n\r\ngetUsrNameDiv.append(getUsrNameInput)\r\n\r\ngetUsrNameForm.append(getUsrNameH2)\r\ngetUsrNameForm.append(getUsrNameDiv)\r\ngetUsrNameForm.append(getUsrNameButton)\r\n\r\n//entire form is in getUsrNameForm\r\n\r\n\r\n// ---------- GET USR NAME FORM END ----------\r\n","import{\r\n    //used for the diagram URL\r\n    optionCorelation\r\n}from './optionCorelation.js'\r\n\r\n//export thing(s) will only be used in script.js\r\n\r\nexport const RulesAndHeadLineDiv = document.createElement(\"div\")\r\n\r\n// ---------- RULES OF THE GAME ----------\r\n\r\nRulesAndHeadLineDiv.className = \"RulesAndHeadLineDiv\"\r\n\r\n\r\nconst HeadLineH1 = document.createElement(\"h1\")\r\nHeadLineH1.className = \"headLine\"\r\nHeadLineH1.innerText = \"Rules of the game:\"\r\n\r\n\r\nconst GameRulesImg = document.createElement(\"img\")\r\nGameRulesImg.src = optionCorelation.diagramURL\r\nGameRulesImg.alt = \"diagrm of rock paper scissor lizard spock\"\r\nGameRulesImg.id = \"gameRulesImg\"\r\n\r\n\r\nRulesAndHeadLineDiv.append(HeadLineH1)\r\nRulesAndHeadLineDiv.append(GameRulesImg)\r\n\r\n//Headline, and picture of the rules are in RulesAndHeadLineDiv\r\n\r\n// ---------- RULES OF THE GAME END----------\r\n\r\n","\r\nimport{\r\n    //used for the URL of the difrent imgs\r\n    optionCorelation\r\n}from './optionCorelation.js'\r\n//export thing(s) will only be used in script.js\r\n\r\nexport const buttonsDiv = document.createElement(\"div\")\r\n\r\n\r\n// ---------- BUTTONS ----------\r\n\r\n\r\nbuttonsDiv.id = \"buttonsDiv\"\r\n\r\nexport const buttonsForm = document.createElement(\"form\")\r\nbuttonsForm.className = \"buttonsForm\"\r\n\r\nconst HeadLineH3 = document.createElement(\"h3\")\r\nHeadLineH3.className = \"headLine\"\r\nHeadLineH3.innerText = \"Choose your weapon:\"\r\n\r\n\r\n//CREATING THE BUTTONS\r\nconst RockButton = document.createElement(\"button\")\r\nRockButton.className = \"optionBtn\"\r\nRockButton.name = \"chosenOption\"\r\nRockButton.value = \"rock\"\r\nconst RockImg = document.createElement(\"img\")\r\nRockImg.className = \"optionImg\"\r\nRockImg.src = optionCorelation.rock.location\r\n\r\n\r\nconst PaperButton = document.createElement(\"button\")\r\nPaperButton.className = \"optionBtn\"\r\nPaperButton.name = \"chosenOption\"\r\nPaperButton.value = \"paper\"\r\nconst PaperImg = document.createElement(\"img\")\r\nPaperImg.className = \"optionImg\"\r\nPaperImg.src = optionCorelation.paper.location\r\n\r\n\r\nconst ScissorButton = document.createElement(\"button\")\r\nScissorButton.className = \"optionBtn\"\r\nScissorButton.name = \"chosenOption\"\r\nScissorButton.value = \"scissor\"\r\nconst ScissorImg = document.createElement(\"img\")\r\nScissorImg.className = \"optionImg\"\r\nScissorImg.src = optionCorelation.scissor.location\r\n\r\n\r\nconst LizardButton = document.createElement(\"button\")\r\nLizardButton.className = \"optionBtn\"\r\nLizardButton.name = \"chosenOption\"\r\nLizardButton.value = \"lizard\"\r\nconst LizardImg = document.createElement(\"img\")\r\nLizardImg.className = \"optionImg\"\r\nLizardImg.src = optionCorelation.lizard.location\r\n\r\n\r\nconst SpockButton = document.createElement(\"button\")\r\nSpockButton.className = \"optionBtn\"\r\nSpockButton.name = \"chosenOption\"\r\nSpockButton.value = \"spock\"\r\nconst SpockImg = document.createElement(\"img\")\r\nSpockImg.className = \"optionImg\"\r\nSpockImg.src = optionCorelation.spock.location\r\n\r\n//CREATING THE BUTTONS END\r\n\r\n\r\n//add the imgs to the corresponding buttons\r\nSpockButton.append(SpockImg)\r\nLizardButton.append(LizardImg)\r\nScissorButton.append(ScissorImg)\r\nPaperButton.append(PaperImg)\r\nRockButton.append(RockImg)\r\n\r\n//adds buttons to the form\r\nbuttonsForm.append(RockButton)\r\nbuttonsForm.append(PaperButton)\r\nbuttonsForm.append(ScissorButton)\r\nbuttonsForm.append(LizardButton)\r\nbuttonsForm.append(SpockButton)\r\n\r\n//adds the headline, and the div containing the buttons to the buttonsDiv\r\nbuttonsDiv.append(HeadLineH3)\r\nbuttonsDiv.append(buttonsForm)\r\n\r\n\r\n//entire form is in buttonsDiv\r\n\r\n// ---------- BUTTONS END ----------\r\n\r\n","//export thing(s) will only be used in script.js\r\n\r\n// ---------- DISPLAY RESULT ----------\r\n\r\n\r\n\r\nexport const displayDiv = document.createElement(\"div\")\r\nconst displayUsrDiv = document.createElement(\"div\")\r\nconst displayMiddleDiv = document.createElement(\"div\")\r\nconst displayComputerDiv = document.createElement(\"div\")\r\n\r\ndisplayDiv.className = \"displayDiv\"\r\ndisplayUsrDiv.className = \"displayUsr\"\r\ndisplayMiddleDiv.className = \"displayMiddle\"\r\ndisplayComputerDiv.className = \"displayComputer\"\r\n\r\n\r\nexport const displayUsrH1 = document.createElement(\"h1\")\r\ndisplayUsrH1.innerText = \"You chose: \"\r\ndisplayUsrH1.id = \"displayUsrH1\"\r\nexport const displayUsrImg = document.createElement(\"img\")\r\ndisplayUsrImg.className = \"displayUsrImg\"\r\n\r\nexport const displayMiddleH1 = document.createElement(\"h1\")\r\nexport const displayMiddleH3 = document.createElement(\"h3\")\r\n\r\nexport const displayComputerH1 = document.createElement(\"h1\")\r\ndisplayComputerH1.innerText = \"Computer chose: \"\r\nexport const displayComputerImg = document.createElement(\"img\")\r\n\r\n\r\n\r\n\r\ndisplayComputerDiv.append(displayComputerH1)\r\ndisplayComputerDiv.append(displayComputerImg)\r\n\r\ndisplayMiddleDiv.append(displayMiddleH1)\r\ndisplayMiddleDiv.append(displayMiddleH3)\r\n\r\ndisplayUsrDiv.append(displayUsrH1)\r\ndisplayUsrDiv.append(displayUsrImg)\r\n\r\ndisplayDiv.append(displayUsrDiv)\r\ndisplayDiv.append(displayMiddleDiv)\r\ndisplayDiv.append(displayComputerDiv)\r\n\r\n\r\n//all content in display is in displayDiv\r\n\r\n\r\n\r\n// ---------- DISPLAY RESULT END ----------\r\n\r\n","//the url for the entire score board\r\nconst url = \"https://java22-avjs-mp1-max-tarn-default-rtdb.europe-west1.firebasedatabase.app/score.json\"\r\n\r\n\r\nexport async function fetchAndSortScores(newScore = null){\r\n\r\n  let sortedScores =  await fetch(url)\r\n  .then((response) => response.json())\r\n  .then((data) => {\r\n\r\n    const arrOfScores = data\r\n  \r\n    if(newScore !== null){\r\n      arrOfScores.push(newScore)\r\n    }\r\n\r\n    //rearanges the array for descending order\r\n    arrOfScores.sort(function (a,b){\r\n\r\n        //this makes it sort in descending order, sorted by the score\r\n        return b.score - a.score \r\n    })\r\n    \r\n    \r\n    //makes the length of the array only 5, and if longer removes the last post\r\n    if(arrOfScores.length >=6){\r\n      arrOfScores.pop()\r\n    }\r\n\r\n    return arrOfScores\r\n\r\n  });\r\n\r\n\r\n  return sortedScores\r\n}\r\n  \r\n\r\nexport async function putScores(newScore){\r\n  \r\n  let sortedScores = await fetchAndSortScores(newScore)\r\n\r\n  const bodyContent = {\r\n    0:{\r\n      userName : sortedScores[0].userName,\r\n      score : sortedScores[0].score\r\n    },\r\n    1:{\r\n      userName : sortedScores[1].userName,\r\n      score : sortedScores[1].score\r\n    },\r\n    2:{\r\n      userName : sortedScores[2].userName,\r\n      score : sortedScores[2].score\r\n    },\r\n    3:{\r\n      userName : sortedScores[3].userName,\r\n      score : sortedScores[3].score\r\n    },\r\n    4:{\r\n      userName : sortedScores[4].userName,\r\n      score : sortedScores[4].score\r\n    }\r\n  };\r\n\r\n\r\n  const header = {\r\n    //Egenskapsnamnet Content-type behöver citattecken eftersom det innehåller ett bindestreck.\r\n        \"Content-type\": \"application/json; charset=UTF-8\"\r\n    }\r\n\r\n  \r\n\r\n  const option = {\r\n    method: \"PUT\", //Metoden som ska användas\r\n    body: JSON.stringify(bodyContent), //Gör om datan till json\r\n    headers: header //Header-objektet\r\n  };\r\n\r\n  \r\n  return fetch(url, option)\r\n  .then(response => response.json())\r\n  .then(data => console.log(data));\r\n\r\n}\r\n\r\n\r\n//replaces all the current high scores with\r\nexport function resetScores(){\r\n\r\n  //the new scores\r\n  const bodyContent ={\r\n    0:{\r\n        userName : \"user1\",\r\n        score : 0\r\n      },\r\n      1:{\r\n        userName : \"user2\",\r\n        score : 0\r\n      },\r\n      2:{\r\n        userName : \"user3\",\r\n        score : 0\r\n      },\r\n      3:{\r\n        userName : \"user4\",\r\n        score : 0\r\n      },\r\n      4:{\r\n        userName : \"user5\",\r\n        score : 0\r\n      }\r\n  }\r\n\r\n  //what type of content that the request is, and what type of charset accepted\r\n  const header = {\r\n    //Egenskapsnamnet Content-type behöver citattecken eftersom det innehåller ett bindestreck.\r\n        \"Content-type\": \"application/json; charset=UTF-8\"\r\n  }\r\n\r\n  \r\n  //the request sent to the database \r\n  const option = {\r\n    method: \"PUT\", //Metoden som ska användas\r\n    body: JSON.stringify(bodyContent), //Gör om datan till json\r\n    headers: header //Header-objektet\r\n  };\r\n  \r\n  //sends request to the database, returns promise \r\n  //so that you can make .then(updateHighScore()) \r\n  return fetch(url, option)\r\n}\r\n","import {\r\n    fetchAndSortScores,\r\n    putScores\r\n} from './firebase.js'\r\n\r\nlet scores \r\nexport const highScoreDiv = document.createElement('div')\r\nhighScoreDiv.id = \"high-score-div\"\r\nhighScoreDiv.innerHTML = \r\n`<h1>Score Board</h1>\r\n<table class=\"styled-table\">\r\n<thead>\r\n    \r\n    <tr>\r\n        <th>Place</th>\r\n        <th>Name</th>\r\n        <th>Points</th>\r\n    </tr>\r\n</thead>\r\n<tbody>\r\n    <tr>\r\n        <td>1</td>\r\n        <td id=\"row-1-name\">a2</td>\r\n        <td id=\"row-1-points\">a3</td>\r\n    </tr>\r\n    <tr>\r\n        <td>2</td>\r\n        <td id=\"row-2-name\">b2</td>\r\n        <td id=\"row-2-points\">b3</td>\r\n    </tr>\r\n    <tr>\r\n        <td>3</td>\r\n        <td id=\"row-3-name\">b2</td>\r\n        <td id=\"row-3-points\">b3</td>\r\n    </tr>\r\n    <tr>\r\n        <td>4</td>\r\n        <td id=\"row-4-name\">b2</td>\r\n        <td id=\"row-4-points\">b3</td>\r\n    </tr>\r\n    <tr>\r\n        <td>5</td>\r\n        <td id=\"row-5-name\">b2</td>\r\n        <td id=\"row-5-points\">b3</td>\r\n    </tr>\r\n</tbody>\r\n</table>\r\n<button id=\"reset-scores\">Reset Scores stored in firebase</button>`;\r\n\r\n\r\nexport function updateHighScore(){\r\n    fetchAndSortScores().then((data)=>{\r\n        scores = data\r\n    \r\n        for (let index = 1; index <= 5; index++) {\r\n            const tableCellName = document.getElementById(`row-${index}-name`)\r\n            const tableCellPoints = document.getElementById(`row-${index}-points`)\r\n    \r\n            tableCellName.innerText = scores[index-1].userName\r\n            tableCellPoints.innerText = scores[index-1].score        \r\n        }\r\n    })\r\n}\r\n\r\n\r\n","\r\n//--------------- IMPORTS ---------------\r\n\r\nimport{ \r\n    navbarHeader \r\n}from \"./header.js\" \r\n\r\nimport{\r\n    optionCorelation\r\n} from \"./optionCorelation.js\"\r\n \r\nimport{ \r\n    getUsrNameForm, \r\n    getUsrNameInput, \r\n    getUsrNameButton \r\n}from \"./getUsrNameForm.js\" \r\n \r\nimport{ \r\n    RulesAndHeadLineDiv \r\n} from \"./rulesAndHeaLineDiv.js\" \r\n \r\nimport{ \r\n    buttonsDiv,  \r\n    buttonsForm \r\n}from \"./buttonsDiv.js\" \r\n \r\nimport{ \r\n    displayDiv, \r\n    displayUsrImg, \r\n    displayMiddleH1, \r\n    displayMiddleH3, \r\n    displayComputerImg, \r\n    displayUsrH1, \r\n    displayComputerH1 \r\n}from \"./displayDiv.js\" \r\n\r\nimport{\r\n    highScoreDiv,\r\n    updateHighScore,\r\n}from './highScore.js'\r\n\r\nimport{\r\n    putScores,\r\n    resetScores\r\n}from \"./firebase.js\"\r\n \r\n\r\n//------------- IMPORTS END -------------\r\n\r\n\r\n\r\n\r\n//variables that will be show in the navbar \r\nlet usrName = \"\" \r\nlet wins = 0 \r\nlet round = 0 \r\n \r\n//used to store what the user has chosen as their weapon \r\nlet usrChosenOption = \"\" \r\n \r\n//used to store what the computer has chosen as their weapon \r\nlet computerChosenOption = \"\" ;\r\n\r\n\r\n\r\n//---------- EVENTLISTENERS ---------- \r\n \r\n//adds getUsrNameForm to DOM \r\ndocument.body.append(getUsrNameForm) \r\n\r\n//activates when getUsrNameForm is submitted\r\ngetUsrNameButton.addEventListener(\"click\" , (event) => { \r\n \r\n    //stops site from reloading \r\n    event.preventDefault() \r\n \r\n    //gets the users Name, from the input tag, and sets usrName  \r\n    usrName = getUsrNameInput.value \r\n \r\n    //removes the getUsrNameForm form from DOM \r\n    getUsrNameForm.remove() \r\n \r\n    //adds the navbar \r\n    document.body.append(navbarHeader) \r\n\r\n    //adds the rules \r\n    document.body.append(RulesAndHeadLineDiv) \r\n \r\n    //adds the buttons \r\n    document.body.append(buttonsDiv) \r\n\r\n    //adds the usrName to the navbar \r\n    document.querySelector(\".navUsrName\").innerText += usrName \r\n     \r\n}) \r\n \r\n//activates when one of the five buttons is clicked in the form \r\nbuttonsForm.addEventListener(\"submit\", (event) => { \r\n \r\n    //no reloading the page \r\n    event.preventDefault() \r\n \r\n    //gets the highScoreDiv from DOM\r\n    const highScoreDivInDOM = document.querySelector('#high-score-div')\r\n\r\n    //checks if highScoreDiv has alredy been added to the DOM\r\n    if(highScoreDivInDOM !== null){\r\n\r\n        //adds the high score table to the DOM\r\n        document.body.append(highScoreDiv)\r\n\r\n    }\r\n    //adds the high score table to the DOM\r\n    document.body.append(highScoreDiv)\r\n\r\n    //fetches and updates the scores in highScoreDiv\r\n    updateHighScore()\r\n\r\n    //removes RulesAndHeadLineDiv from the DOM \r\n    RulesAndHeadLineDiv.remove() \r\n \r\n    //variable that is visible in the navbar \r\n    round++ \r\n \r\n    //when form is submitted this gets the value of the button pressed \r\n    usrChosenOption = event.submitter.value  \r\n \r\n    //randomly chooses a option for computer\r\n    computerChosenOption = randomOption() \r\n\r\n    //logs the value of the button pressed \r\n    console.log(`Users Chosen option is = ${usrChosenOption}`) \r\n     \r\n    //changes the displayUsrImg src \r\n    displayUsrImg.src = optionCorelation[usrChosenOption].location \r\n \r\n    //changes the displayComputerImg src \r\n    displayComputerImg.src = optionCorelation[computerChosenOption].location \r\n\r\n    //changes the displayMidde \r\n    displayMiddleH3.innerText = optionCorelation[usrChosenOption][computerChosenOption].explanation \r\n \r\n    //contains the outcome, either \"win\", \"loss\", or \"tie\". should never be anything else\r\n    let outCome = optionCorelation[usrChosenOption][computerChosenOption].outcome\r\n\r\n    //if usr has lost \r\n    if(outCome == \"loss\"){ \r\n        displayMiddleH1.innerText = \"LOSER!\" \r\n        displayComputerH1.style.color = \"green\"         \r\n        displayUsrH1.style.color = \"red\" \r\n\r\n        //sends the acheived score to the database if it is more than the lowest highscore\r\n        sendScores(wins, usrName)\r\n\r\n        //resets the game variables\r\n        wins = 0\r\n        round = 0\r\n\r\n\r\n        //if usr has won \r\n    }else if(outCome == \"win\"){ \r\n        displayMiddleH1.innerText = \"WINNER!\" \r\n        displayUsrH1.style.color = \"green\" \r\n        displayComputerH1.style.color = \"red\" \r\n        wins++ \r\n\r\n    \r\n        //if usr is tied with computer \r\n    }else if(outCome == \"tie\"){ \r\n        displayMiddleH1.innerText = \"TIE!\" \r\n        displayUsrH1.style.color = \"black\" \r\n        displayComputerH1.style.color = \"black\"\r\n        \r\n        //sends the acheived score to the database if it is more than the lowest highscore\r\n        sendScores(wins, usrName)\r\n\r\n        //resets the game variables\r\n        wins = 0\r\n        round = 0\r\n    } \r\n     \r\n    //updates the variables in the navbar \r\n    updateNavBar(usrName, wins,round) \r\n \r\n    \r\n    //adds the displayDiv to DOM \r\n    document.body.prepend(displayDiv) \r\n    \r\n    //updates the shown scores\r\n    \r\n    \r\n}) \r\n\r\n//when clicked resets all points to 0\r\nhighScoreDiv.querySelector(\"#reset-scores\").addEventListener(('click'), event =>{\r\n\r\n    //sends negative scores to the database, when scores have been sent, the score board is updated\r\n    resetScores().then((response)=>{\r\n        updateHighScore()\r\n    })\r\n\r\n\r\n})\r\n\r\n\r\n \r\n \r\n//---------- EVENTLISTENER END---------- \r\n \r\n \r\n \r\n \r\n \r\n \r\n//---------------------------------------- ONLY FUNCTIONS BELOW THIS----------------------------------------- \r\n\r\n//sends the acheived score to the database, \r\n//if the acheived is lower than the lowest score in the database => nothing happens\r\nfunction sendScores(wins, usrName){\r\n\r\n    //a post that could be added to the database\r\n    const newScore =  {\r\n        score : wins,\r\n        userName : usrName\r\n    }\r\n\r\n    //if the score is bigger than the smallest score, it adds newScore to the database\r\n    putScores(newScore).then(()=>{\r\n        updateHighScore()\r\n    })\r\n}\r\n\r\n//returns one of the five options as a string, randomized \r\nfunction randomOption(){ \r\n    let ranValue = getRandomValueBetween(1,5) \r\n    switch(ranValue){ \r\n        case 1: \r\n            return \"rock\" \r\n \r\n        case 2: \r\n            return \"paper\" \r\n \r\n        case 3: \r\n            return \"scissor\" \r\n \r\n        case 4: \r\n            return \"lizard\" \r\n \r\n        case 5: \r\n            return \"spock\" \r\n             \r\n \r\n        default: \r\n            console.log(\"Something is hella wrong if you see this\") \r\n            break; \r\n       \r\n    } \r\n} \r\n \r\n//updates the variables show in the navbar \r\nfunction updateNavBar(usrName, wins, round){ \r\n    document.querySelector(\".navUsrName\").innerText = `UserName: ${usrName}` \r\n    document.querySelector(\".navWins\").innerText = `Wins: ${wins}`  \r\n    document.querySelector(\".navRound\").innerText = `Round: ${round}` \r\n} \r\n \r\n \r\n//transforms variables into querystring \r\nfunction buildQuery (dataName, data) { \r\n    let objectOfData = { \r\n        [dataName] : data \r\n    } \r\n\treturn new URLSearchParams(objectOfData).toString(); \r\n} \r\n \r\n \r\n//returns random integer between, including, minimumValue and maximumValue \r\n//minimumValue <= retrunValue >= maximumValue \r\nfunction getRandomValueBetween(minimumValue, maximumValue){ \r\n    let retrunValue = Math.floor(Math.random() * (maximumValue - minimumValue +1)) + minimumValue \r\n    return retrunValue \r\n} \r\n \r\n \r\n//gets value from querystring \r\nfunction getParameterByName(name, url = window.location.href) { \r\n    name = name.replace(/[\\[\\]]/g, '\\\\$&'); \r\n    let regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'), \r\n        results = regex.exec(url); \r\n    if (!results) return null; \r\n    if (!results[2]) return ''; \r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' ')); \r\n} "],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$51ab2c0018eca52b$export$89f34a0827cf5aeb","document","createElement","$51ab2c0018eca52b$var$navbarNav","$51ab2c0018eca52b$var$navbarUl","$51ab2c0018eca52b$var$navbarLiUsrName","innerText","className","$51ab2c0018eca52b$var$navbarLiWins","$51ab2c0018eca52b$var$navbarLiNavRound","append","$ab49ccc895f5e08a$exports","URL","resolve","url","toString","$74583f4760aab42b$exports","$a4626e0137d86815$exports","$1563c6f7ba0a2ada$exports","$c25451a26a32ec94$exports","$7cd571ba327e97de$var$arrOfImgUrl","$d99e12e75aae0a4e$exports","$7cd571ba327e97de$export$4b9f127a82109079","rock","location","outcome","explanation","paper","scissor","lizard","spock","diagramURL","$30a27da4c3ced015$export$2701a17021f8f2a","$30a27da4c3ced015$var$getUsrNameH2","$30a27da4c3ced015$var$getUsrNameDiv","$30a27da4c3ced015$export$8671345fade1a6ef","type","name","$30a27da4c3ced015$export$650c224246ea7439","$2c614a5329eeb673$export$b538c8cbdb785953","$2c614a5329eeb673$var$HeadLineH1","$2c614a5329eeb673$var$GameRulesImg","src","alt","$cb26ad5553708746$export$f08d8e7ed913fbf","$cb26ad5553708746$export$83a9feb26cfc379e","$cb26ad5553708746$var$HeadLineH3","$cb26ad5553708746$var$RockButton","value","$cb26ad5553708746$var$RockImg","$cb26ad5553708746$var$PaperButton","$cb26ad5553708746$var$PaperImg","$cb26ad5553708746$var$ScissorButton","$cb26ad5553708746$var$ScissorImg","$cb26ad5553708746$var$LizardButton","$cb26ad5553708746$var$LizardImg","$cb26ad5553708746$var$SpockButton","$cb26ad5553708746$var$SpockImg","$cb753d7b30205849$export$ba27159785f500d4","$cb753d7b30205849$var$displayUsrDiv","$cb753d7b30205849$var$displayMiddleDiv","$cb753d7b30205849$var$displayComputerDiv","$cb753d7b30205849$export$c0c1a8126b6fad61","$cb753d7b30205849$export$cf73bb140e2676a6","$cb753d7b30205849$export$768c3c3f3e7b1b27","$cb753d7b30205849$export$abf9718c4b84a524","$cb753d7b30205849$export$45ad384530445caf","$cb753d7b30205849$export$e530b58cae728f5","$953205d9211b0804$var$url","async","$953205d9211b0804$export$85577c00bac7f46","newScore","fetch","then","response","json","data","arrOfScores","push","sort","a","b","score","pop","$953205d9211b0804$export$92bbd7386111720f","sortedScores","bodyContent","userName","option","method","body","stringify","headers","console","log","$953205d9211b0804$export$7e8bec0cda8151e5","$a9790b1bf4a7a532$var$scores","$a9790b1bf4a7a532$export$3adf011d1bcbb7b3","$a9790b1bf4a7a532$export$22a668fc6e1f9263","index","tableCellName","getElementById","tableCellPoints","innerHTML","$3fba0bda95caa784$var$usrName","$3fba0bda95caa784$var$wins","$3fba0bda95caa784$var$round","$3fba0bda95caa784$var$usrChosenOption","$3fba0bda95caa784$var$computerChosenOption","$3fba0bda95caa784$var$sendScores","wins","usrName","addEventListener","event","preventDefault","remove","querySelector","submitter","minimumValue","maximumValue","Math","floor","random","$3fba0bda95caa784$var$randomOption","outCome","round","style","color","prepend"],"version":3,"file":"index.1c9ba95f.js.map"}